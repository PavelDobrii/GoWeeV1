version: "3.9"

networks:
  core-net:
    name: core-net

services:
  redpanda:
    image: redpandadata/redpanda:latest
    command:
      - redpanda start --overprovisioned --smp 1 --memory 1G --reserve-memory 0M --node-id 0 --check=false
    ports:
      - "9092:9092"
    networks:
      - core-net

  redpanda-console:
    image: redpandadata/console:latest
    depends_on:
      - redpanda
    ports:
      - "8080:8080"
    environment:
      - KAFKA_BROKERS=redpanda:9092
    networks:
      - core-net

  jaeger:
    image: jaegertracing/all-in-one:1.51
    ports:
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
    networks:
      - core-net

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - core-net

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./infra/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - core-net
    depends_on:
      - prometheus

  postgres:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: cg
      POSTGRES_PASSWORD: cg
      POSTGRES_DB: cityguide
    volumes:
      - ./infra/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - core-net
  auth-profile:
    build: ./services/auth_profile
    ports:
      - "8001:8000"
    environment:
      DATABASE_URL: postgresql+psycopg://cg:cg@postgres:5432/cityguide
      JWT_SECRET: secret
      KAFKA_BROKERS: redpanda:9092
    depends_on:
      - postgres
      - redpanda
    networks:
      - core-net
